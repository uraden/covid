{"version":3,"sources":["util.js","Map.js","Table.js","InfoBox.js","LineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","color","fillColor","radius","Math","sqrt","Popup","className","style","backgroundImage","flag","numeral","format","prettyPrintStat","stat","Map","countries","zoom","TileLayer","url","attribution","Table","InfoBox","title","total","isRed","active","props","Card","onClick","CardContent","Typography","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","name","iso2","getCountriesData","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41a91782.chunk.js","sourcesContent":["import {Circle,Popup } from 'react-leaflet';\nimport React from 'react';\nimport numeral from 'numeral';\nconst casesTypeColors={\n    cases:{\n        hex: \"#CC1034\",\n        // rgb:\"rgb(204,16,52)\",\n        // half_op:\"rgba(204,16,52,0.5)\",\n        multiplier:800\n    },\n    recovered:{\n        hex:'#7dd71d',\n        // rgb:'rgb(125,215,29,0.5)',\n        // half_op:'rgba(125,215,29,0.5)',\n        multiplier:1200\n    },\n    deaths:{\n        hex:'#fb4443',\n        // rgb:'rgb(251,68,67)',\n        // half_op:'rgba(251,68,67,0.5)',\n        multiplier:2000\n    }\n}\nexport const sortData=(data)=>{\n    const sortedData=[...data];\n    sortedData.sort((a,b)=>{\n        if(a.cases>b.cases){\n            return -1;\n        }else{\n            return 1;\n        }\n        }\n    )\n    return sortedData\n\n}\nexport const showDataOnMap=(data,casesType='cases')=>(\n    data.map(country=>(\n        <Circle center={[country.countryInfo.lat,country.countryInfo.long]}\n        fillOpacity={0.4}\n        color={casesTypeColors[casesType].hex}\n        fillColor={casesTypeColors[casesType].hex}\n        radius={\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n        }\n        >\n            <Popup>\n                <div className=\"info-container\">\n                <div className=\"info-flag\"\n                style={{backgroundImage:`url(${country.countryInfo.flag})`}}/>\n        \n                       <div className='info-name'>{country.country}</div>\n                       <div className='info-confirm'>Cases:{numeral(country.cases).format(\"0,0\")}</div>\n                       <div className='info-recovered'>Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\n                       <div className='info-deaths'>Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\n                    </div>\n                \n                \n            </Popup>\n\n        </Circle>\n\n    ))\n);\nexport const prettyPrintStat=(stat)=>\n    stat ? `+${numeral(stat).format(\"0.0a\")}`:\"+0\";","import React from \"react\";\nimport './map.css'\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\nimport {showDataOnMap} from './util';\nfunction Map({countries,casesType,center,zoom}) {\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom}>\n          <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='$copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {showDataOnMap(countries,casesType)}\n\n      </LeafletMap>\n    </div>\n  );\n}\n\nexport default Map;","import React from 'react'\nimport './Table.css'\nimport numeral from 'numeral'\nfunction Table({countries}) {\n    return (\n        <div className=\"table\">\n        {countries.map(({country,cases})=>(\n          <tr>\n              <td>{country}</td>\n              <td><strong>{numeral(cases).format()}</strong></td>\n          </tr>  \n        ))}\n        </div>\n    )\n}\n\nexport default Table","import React from 'react'\nimport './InfoBox.css'\nimport {Card,CardContent,Typography} from \"@material-ui/core\"\nfunction InfoBox({title,cases,total,isRed,active,...props}) {\n    return (\n        <Card\n        onClick={props.onClick}\n        className={`infoBox ${active &&'infoBox--selected'} ${isRed && 'infoBox--red'}`}>\n            <CardContent>\n                <Typography className='infoBox_title' color='textSecondary'>\n                    {title}\n                </Typography>\n                <h2 className={`infoBox_cases ${!isRed && \"infoBox__cases--green\"}`}>\n                    {cases}\n                </h2>\n                <Typography color='textSecondary'>{total}Total</Typography>\n            </CardContent>\n            \n        </Card>\n    )\n}\n\nexport default InfoBox","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;","import React,{useState,useEffect} from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from '@material-ui/core';\nimport './App.css';\nimport Map from './Map';\nimport Table from './Table';\nimport InfoBox from './InfoBox';\nimport {sortData,prettyPrintStat} from './util';\nimport LineGraph from './LineGraph'\nimport \"leaflet/dist/leaflet.css\";\nfunction App() {\n  const [countries,setCountries]=useState([]);\n  const [country,setCountry]=useState('worldwide');\n  const [countryInfo,setCountryInfo]=useState({});\n  const [tableData,setTableData]=useState([]);\n  const [mapCenter,setMapCenter]=useState({lat:34.80746,lng:-40.4796});\n  const [mapZoom,setMapZoom]=useState(3);\n  const [mapCountries,setMapCountries]=useState([])\n  const [casesType,setCasesType]=useState('cases')\n//https://disease.sh/v3/covid-19/countries\nuseEffect(()=>{\n  fetch('https://disease.sh/v3/covid-19/all')\n  .then((response)=>response.json())\n  .then((data)=>{\n    setCountryInfo(data);\n  });\n},[]);\nuseEffect(()=>{\nconst getCountriesData=async()=>{\n   await fetch('https://disease.sh/v3/covid-19/countries')\n   .then((response)=>response.json())\n   .then((data)=>{\n     const countries=data.map((country)=>(\n       {\n         name:country.country,\n         value:country.countryInfo.iso2\n       }\n     ));\n     const sortedData=sortData(data)\n     setTableData(sortedData);\n     setMapCountries(data);\n     setCountries(countries);\n   })\n}\ngetCountriesData()\n},[]);\nconst onCountryChange=async(event)=>{\n  const countryCode=event.target.value;\n  setCountry(countryCode);\n  const url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n  await fetch(url)\n  .then(response=>response.json())\n  .then (data=>{\n    setCountry(countryCode);\n    setCountryInfo(data);\n    setMapCenter(countryCode==='worldwide'?[data.countryInfo.lat,data.countryInfo.long]:[34.80746,-40.4796])\n    setMapZoom(4);\n  })\n\n\n}\n// console.log(countryInfo);\n\n  return (\n    <div className=\"app\">\n     {/* <h1>Let's build a covid 19 tracker</h1> */}\n     <div className='app_left'>\n     <div className=\"app_header\">\n     <h1>COVID-19 TRACKER </h1>\n     <FormControl className=\"app_dropdown\">\n       <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n        \n           <MenuItem value =\"worldwide\">Worldwide</MenuItem>\n          {\n            countries.map(country=>(\n              <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))\n          }\n       </Select>\n     </FormControl>\n     </div>\n     <div className=\"app_stats\">\n<InfoBox isRed={true} active={casesType==='cases'} onClick={e=>setCasesType('cases')} title='Coronavirus cases' total={prettyPrintStat(countryInfo.cases)} \ncases={ prettyPrintStat(countryInfo.todayCases)}/>\n<InfoBox isRed={false} active={casesType==='recovered'}  onClick={e=>setCasesType('recovered')} title='Recovered' total={prettyPrintStat(countryInfo.recovered)} \ncases={prettyPrintStat(countryInfo.todayRecovered)}/>\n<InfoBox isRed={true} active={casesType==='deaths'}  onClick={e=>setCasesType('deaths')} title='Deaths' total={prettyPrintStat(countryInfo.deaths)} \ncases={prettyPrintStat(countryInfo.todayDeaths)}/>\n\n     </div>\n    \n     \n       {/*Table*/}\n       {/*Graph*/}\n       {/* Map*/}\n<Map casesType={casesType} countries={mapCountries} center={mapCenter} zoom={mapZoom}/>\n</div>\n<Card className='app_right'>\n<CardContent>\n  <h3>Live Content by Country</h3>\n  <Table countries={tableData}/>\n  <h3 className='app_graphTitle'>Worldwide new {casesType}</h3>\n  <LineGraph className='app_graph' casesType={casesType}/>\n  </CardContent>\n</Card>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}